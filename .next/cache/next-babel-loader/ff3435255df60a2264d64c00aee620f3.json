{"ast":null,"code":"var _jsxFileName = \"/Users/trevor_weng/Documents/apps/hello-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport ItemRow from '../components/ItemRow';\nimport useSWR from 'swr';\n\nconst Nutrition = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(ItemRow, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, JSON.stringify(props.data)));\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nNutrition.getInitialProps = async function () {\n  const {\n    quote,\n    error\n  } = useSWR('/api/randomQuote', fetcher);\n  const res = await fetch('https://trackapi.nutritionix.com/v2/natural/nutrients', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-app-id\": \"3f45926e\",\n      \"x-app-key\": \"8ad16db1af6bf3edf049bd99f5232bdb\"\n    },\n    body: JSON.stringify({\n      \"query\": \"banana\"\n    })\n  });\n  const data = await res.json();\n  return {\n    data\n  };\n};\n\nexport default Nutrition;","map":{"version":3,"sources":["/Users/trevor_weng/Documents/apps/hello-next/pages/index.js"],"names":["fetch","ItemRow","useSWR","Nutrition","props","JSON","stringify","data","fetcher","url","then","r","json","getInitialProps","quote","error","res","method","headers","body"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIC,IAAI,CAACC,SAAL,CAAeF,KAAK,CAACG,IAArB,CADJ,CAFF,CADF;;AASA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOT,KAAK,CAACS,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAEDT,SAAS,CAACU,eAAV,GAA4B,kBAAiB;AAC3C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBb,MAAM,CAAC,kBAAD,EAAqBM,OAArB,CAA/B;AAGA,QAAMQ,GAAG,GAAG,MAAMhB,KAAK,CAAC,uDAAD,EACrB;AACEiB,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,kBAAY,UAFL;AAGP,mBAAa;AAHN,KAFX;AAOEC,IAAAA,IAAI,EAAEd,IAAI,CAACC,SAAL,CAAe;AAAE,eAAS;AAAX,KAAf;AAPR,GADqB,CAAvB;AAWA,QAAMC,IAAI,GAAG,MAAMS,GAAG,CAACJ,IAAJ,EAAnB;AAEA,SAAO;AACLL,IAAAA;AADK,GAAP;AAGD,CApBD;;AAsBA,eAAeJ,SAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport ItemRow from '../components/ItemRow';\nimport useSWR from 'swr';\n\nconst Nutrition = props => (\n  <div>\n    <ItemRow />\n    <div>\n      { JSON.stringify(props.data) }\n    </div>\n  </div>\n);\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nNutrition.getInitialProps = async function() {\n  const { quote, error } = useSWR('/api/randomQuote', fetcher);\n\n\n  const res = await fetch('https://trackapi.nutritionix.com/v2/natural/nutrients',\n    { \n      method: 'POST',  \n      headers: {\n        \"Content-Type\": \"application/json\", \n        \"x-app-id\": \"3f45926e\", \n        \"x-app-key\" :\"8ad16db1af6bf3edf049bd99f5232bdb\"\n      },\n      body: JSON.stringify({ \"query\": \"banana\" }) ,\n    }\n  );\n  const data = await res.json();\n\n  return {\n    data\n  };\n};\n\nexport default Nutrition;\n"]},"metadata":{},"sourceType":"module"}